name: Run on Demand 2

on:
  workflow_dispatch:  # This allows the workflow to be manually triggered

env:
  AWS_REGION: us-west-2
  ECS_TASK_DEFINITION: survey-task-definition.json
  ECS_CLUSTER: Survey

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'
          
      - name: Build and push Docker images
        id: build-image
        run: |
          IMAGE_TAG=latest
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_BACKEND=survey_backend 
          ECR_REPOSITORY_FRONTEND=survey_frontend 
          ECR_REPOSITORY_ADMINER=adminer 
          ECR_REPOSITORY_MAILCATCHER=schickling/mailcatcher 
          ECR_REPOSITORY_DB=postgres 
          ECR_REPOSITORY_PROXY=traefik
          cp .env.example .env
          docker compose build
          docker compose down -v --remove-orphans
          docker compose up -d 
          docker tag survey_backend:latest $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG 
          docker tag survey_frontend:latest $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:$IMAGE_TAG 
          docker tag adminer $ECR_REGISTRY/$ECR_REPOSITORY_ADMINER:$IMAGE_TAG 
          docker tag schickling/mailcatcher $ECR_REGISTRY/$ECR_REPOSITORY_MAILCATCHER:$IMAGE_TAG 
          docker tag postgres:12 $ECR_REGISTRY/$ECR_REPOSITORY_DB:12 
          docker tag traefik:3.0 $ECR_REGISTRY/$ECR_REPOSITORY_PROXY:3.0 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:$IMAGE_TAG 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_ADMINER:$IMAGE_TAG 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_MAILCATCHER:$IMAGE_TAG 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_DB:12 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PROXY:3.0

      # Render and update task definition for each container individually

      - name: Fill in the new image ID for survey_backend
        id: task-def-backend
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: survey_backend
          image: "913524926070.dkr.ecr.us-west-2.amazonaws.com/survey_backend:latest"

      - name: Fill in the new image ID for survey_frontend
        id: task-def-frontend
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: survey_frontend
          image: "913524926070.dkr.ecr.us-west-2.amazonaws.com/survey_frontend:latest"

      - name: Fill in the new image ID for adminer
        id: task-def-adminer
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: adminer
          image: "913524926070.dkr.ecr.us-west-2.amazonaws.com/adminer:latest"

      - name: Fill in the new image ID for mailcatcher
        id: task-def-mailcatcher
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: mailcatcher
          image: "913524926070.dkr.ecr.us-west-2.amazonaws.com/schickling/mailcatcher:latest"

      - name: Fill in the new image ID for postgres
        id: task-def-db
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: postgres
          image: "913524926070.dkr.ecr.us-west-2.amazonaws.com/postgres:12"

      - name: Fill in the new image ID for proxy
        id: task-def-proxy
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: proxy
          image: "913524926070.dkr.ecr.us-west-2.amazonaws.com/traefik:3.0"

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          service: survey
          cluster: Survey
          wait-for-service-stability: true
