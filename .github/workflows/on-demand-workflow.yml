name: Run on Demand

on:
  workflow_dispatch:  # This allows the workflow to be manually triggered

env:
  AWS_REGION: us-west-2                                 # set this to your preferred AWS region, e.g. us-west-1
  #ECR_REPOSITORY: incredihire/survey                            # set this to your Amazon ECR repository name
  #ECS_SERVICE: survey-service                       # set this to your Amazon ECS service name
  #ECS_CLUSTER: Survey                               # set this to your Amazon ECS cluster name
  #ECS_TASK_DEFINITION: survey-task-definition.json  # set this to the path to your Amazon ECS task definition
                                                        # file, e.g. .aws/task-definition.json
  #CONTAINER_NAME: survey                           # set this to the name of the container in the

jobs:
  build-and-deploy-to-ECR:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Build and push Docker images
        id: build-image
        run: |
          IMAGE_TAG=latest
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_BACKEND=survey/survey_backend
          ECR_REPOSITORY_FRONTEND=survey/survey_frontend
          ECR_REPOSITORY_ADMINER=survey/adminer
          ECR_REPOSITORY_MAILCATCHER=survey/mailcatcher
          ECR_REPOSITORY_DB=survey/postgres
          ECR_REPOSITORY_PROXY=survey/traefik
          docker-compose build
          docker tag survey_backend:latest $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG
          docker tag survey_frontend:latest $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:$IMAGE_TAG

